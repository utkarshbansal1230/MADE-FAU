pipeline GFTSPipeline {

    DownloadData
        -> UnzipArchive
        -> SelectStopsFile
        -> ParseFileText
        -> InterpretStopsCSV
        -> InterpretStopsTable
        -> LoadStopsToDB;

    block DownloadData oftype HttpExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    block UnzipArchive oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block SelectStopsFile oftype FilePicker {
        path: "./stops.txt";
    }

    block ParseFileText oftype TextFileInterpreter {}

    block InterpretStopsCSV oftype CSVInterpreter {
        enclosingEscape: '"';
        delimiter: ',';
        enclosing: '"';
    }

    block InterpretStopsTable oftype TableInterpreter {
        header: true;
        columns: [
            "stop_id" oftype integer,
            "stop_name" oftype germanumalut,
            "stop_lat" oftype valideGeo,
            "stop_lon" oftype valideGeo,
            "zone_id" oftype ZoneFilter,
        ];
    }

    valuetype germanumalut oftype text {
        constraints: [
            GermanUmlautFormat
        ];
    }

    constraint GermanUmlautFormat oftype RegexConstraint {
        regex: /^[a-zA-ZäöüÄÖÜß\s]+$/;
    }

    valuetype valideGeo oftype decimal {
        constraints: [
            GeoCoordinateRange
        ];
    }

    constraint GeoCoordinateRange oftype RangeConstraint {
        lowerBound: -90;
        upperBound: 90;
    }

    // Wertetyp für die Zone
    valuetype ZoneFilter oftype integer {
        constraints: [KeepZone1925];
    }

    // Constraint für Zone 1925
    constraint KeepZone1925 oftype RangeConstraint {
        lowerBound: 1925;
        upperBound: 1925;
    }

    block LoadStopsToDB oftype SQLiteLoader {
        table: "stops";
        file: "./gtfs.sqlite";
    }
}
